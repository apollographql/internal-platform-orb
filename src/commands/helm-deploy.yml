description: >
  Deploys Helm to ShuttleCrawler, assumes image version of component is set in .version
parameters:
  app-name:
    type: string
    description: Name of application to be deployed
  environment:
    type: string
    description: Environment to be deployed on (prod, staging, dev)
  component:
    type: string
    description: Name of folder which contains the Helm Chart
  domain:
    type: string
    description: Domain (K8s namespace) to deploy to
  path:
    type: string
    description: Path to .chart folder of application
  short-region:
    type: string
    default: usc1
    description: Short-region to deploy Compute Engine resources
  region:
    type: string
    default: us-central1
    description: Region to deploy Compute Engine resources
  registry-region:
    type: string
    default: us-central1
    description: Region of Artifact Registry
  dry-run:
    type: boolean
    default: false
    description: If enabled, simulate an upgrade
  channel:
    type: string
    description: Slack channel to send notifications to
    default: deploys-staging
steps:
- checkout
- gcp-authorize:
    environment-variable-name: GCLOUD_SERVICE_ACCOUNT
    do-helm-login: 'true'
- run:
    name: Setting up ShuttleCrawler Google and K8 context
    command: |
      gcloud container clusters get-credentials \
        platform-<< parameters.environment >>-<< parameters.region >>-cluster \
        --zone << parameters.region >> \
        --project ${GCLOUD_PROJECT_ID}
- run:
    name: Preparing Helm upgrade parameters
    command: |
      params=(--atomic --install --cleanup-on-fail --debug)
      [[ -f << parameters.path >>/.chart/<< parameters.component >>/<< parameters.environment >>.yaml ]] && params+=("-f << parameters.environment >>.yaml")
      params+=("-f values.yaml")
      params+=("--namespace=<< parameters.domain >>")
      params+=("--set global.environment=<< parameters.environment >>")
      params+=("--set global.projectId=${GCLOUD_PROJECT_ID}")
      params+=("--set global.shortRegion=<< parameters.short-region >>")
      params+=("--set global.region=<< parameters.region >>")
      params+=("--set global.registryRegion=<< parameters.registry-region >>")
      params+=("--set global.version=$(<.version)")
      echo "export PARAMS=(${params[@]})" >> "$BASH_ENV"
- run:
    name: Building helm dependencies
    working_directory: << parameters.path >>/.chart/<< parameters.component >>
    command: |
      echo "Building dependencies for the application '<< parameters.app-name >>-<< parameters.component >>'"
      helm dependency build ./
- when:
    condition: << parameters.dry-run >>
    steps:
    - run:
        name: Deploy and release (Dry-run)
        working_directory: << parameters.path >>/.chart/<< parameters.component >>
        command: |
          echo "Dry-run of upgrading the application '<< parameters.app-name >>>-<< parameters.component >>' version: $(<.version)"
          helm upgrade << parameters.app-name >>->-<< parameters.component >> ./ --dry-run "${PARAMS[@]}"
- unless:
    condition: << parameters.dry-run >>
    steps:
      - oss-internal-platform-orb/slack-circleci-build:
          notify: "*starting deploy* of << parameters.app-name >>->-<< parameters.component >> to platform-<< parameters.environment >>"
          channel: << parameters.channel >>
          emoji: ':ship:'
      - run:
          name: Deploy and release
          working_directory: << parameters.path >>/.chart/<< parameters.component >>
          command: |
            echo "Upgrading the application '<< parameters.app-name >>>-<< parameters.component >>' version: $(<.version)"
            helm upgrade << parameters.app-name >>>-<< parameters.component >> ./ "${PARAMS[@]}"
      - oss-internal-platform-orb/slack-circleci-build:
          notify: "*finished deploy* of << parameters.app-name >>->-<< parameters.component >> to platform-<< parameters.environment >>"
          channel: << parameters.channel >>
          emoji: ':checkered_flag:'
          # The oncall subteam string is found from https://app.slack.com/client/T024JTSAP/DK3CTS2F4/user_groups
          fail: '<!subteam^SFNQZTE4Q>'
