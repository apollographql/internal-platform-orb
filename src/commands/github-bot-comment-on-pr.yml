description: >
  This command takes FILE_RESULTS, formats it for Markdown, then adds it to the current PR.
  MUST be used with the github-orb context
parameters:
  title:
    type: string
  command:
    type: string
    description: A command which must produce a /tmp/notification.txt file. If no, or empty file, produced step is halted
  update-last:
    type: boolean
    description: Update the last comment from this bot with this title instead of creating a new one
    default: false
  bot-making-comments:
    type: string
    description: name of the bot making all these comments
  do-when:
    type: string
    description: Value passed to "when" parameter on job. Useful to let job run even after a prior step failed
    default: on_success
steps:
  - run:
      name: Comment in PR
      command: |
        << parameters.command >>
        if [ ! -f /tmp/notification.txt ]
        then
          circleci-agent step halt
        fi

        if [ ! -s /tmp/notification.txt ]
        then
          # file IS zero size. Like you piped to a file but never wrote to it
          circleci-agent step halt
        fi

        echo "## << parameters.title >>" > /tmp/preamble.txt
        cat /tmp/preamble.txt /tmp/notification.txt > /tmp/constructed_forslack.txt

        PR_NUMBER=$(echo "$CIRCLE_PULL_REQUEST" | cut -d '/' -f 7)
        echo $CIRCLE_PULL_REQUEST $PR_NUMBER

        COMMENT_IDS=`gh api repos/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/issues/$PR_NUMBER/comments \
          -q '.[] | select(.user.login == "<< parameters.bot-making-comments >>") | select(.body | startswith("## << parameters.title >>")) | .id'`
        COMMENT_IDS_ARRAY=( $COMMENT_IDS )
        LAST=""
        if [ ${#COMMENT_IDS_ARRAY[@]} -ne 0 ] && [ "<< parameters.update-last >>" == "true" ]; then
            LAST=${COMMENT_IDS_ARRAY[${#COMMENT_IDS_ARRAY[@]}-1]}
        fi

        if [ "$LAST" == "" ]; then
            echo No existing comment, create a new one
            gh pr comment "$CIRCLE_PULL_REQUEST" -F /tmp/constructed_forslack.txt
        else
            echo comment exists, update: $LAST
            body=`cat /tmp/constructed_forslack.txt`
            gh api --method PATCH \
                -H "Accept: application/vnd.github+json" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                /repos/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/issues/comments/$LAST \
                -f body="$body"
        fi

      when: << parameters.do-when >>
